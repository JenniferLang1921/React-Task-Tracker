{"ast":null,"code":"var _jsxFileName = \"/Users/jenniferlang/react-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); //Fetch Tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  }; // Add Task\n\n\n  const addTask = task => {//const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = { id, ...task }\n    // setTasks([...tasks, newTask])\n  }; // Delete Task\n\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Toggle Reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask,\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 22\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 6\n    }, this) : 'No Tasks To Show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jenniferlang/react-task-tracker/src/App.js"],"names":["useState","useEffect","Header","Tasks","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","addTask","task","deleteTask","id","method","filter","toggleReminder","map","reminder","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,QAAQ,GAAG,YAAY;AAC3B,YAAMC,eAAe,GAAG,MAAMC,UAAU,EAAxC;AACAH,MAAAA,QAAQ,CAACE,eAAD,CAAR;AACD,KAHD;;AAKAD,IAAAA,QAAQ;AACT,GAPQ,EAON,EAPM,CAAT,CAJa,CAab;;AACA,QAAME,UAAU,GAAG,YAAY;AAC7B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,WAAOD,IAAP;AAED,GAND,CAda,CAsBf;;;AACA,QAAME,OAAO,GAAIC,IAAD,IAAU,CACxB;AACD;AACA;AAEA,GALD,CAvBe,CA8Bf;;;AACA,QAAMC,UAAU,GAAG,MAAOC,EAAP,IAAc;AAC/B,UAAMN,KAAK,CAAE,+BAA8BM,EAAG,EAAnC,EAAsC;AAC/CC,MAAAA,MAAM,EAAE;AADuC,KAAtC,CAAX;AAIAZ,IAAAA,QAAQ,CAACD,KAAK,CAACc,MAAN,CAAcJ,IAAD,IAAUA,IAAI,CAACE,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAND,CA/Be,CAuCf;;;AACA,QAAMG,cAAc,GAAIH,EAAD,IAAQ;AAC7BX,IAAAA,QAAQ,CACND,KAAK,CAACgB,GAAN,CAAWN,IAAD,IACVA,IAAI,CAACE,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGF,IAAL;AAAWO,MAAAA,QAAQ,EACpC,CAACP,IAAI,CAACO;AADW,KAAjB,GACmBP,IAFnB,CADM,CAAR;AAKD,GAND;;AASE,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACC,QAAC,MAAD;AACA,MAAA,KAAK,EAAE,MAAMX,cAAc,CAAE,CAACD,WAAH,CAD3B;AAEA,MAAA,OAAO,EAAEA;AAFT;AAAA;AAAA;AAAA;AAAA,YADD,EAKEA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEW,OAAhB;AAChB,MAAA,OAAO,EAAEX;AADO;AAAA;AAAA;AAAA;AAAA,YALjB,EAQEE,KAAK,CAACkB,MAAN,GAAe,CAAf,gBACD,QAAC,KAAD;AAAO,MAAA,KAAK,EAAElB,KAAd;AACA,MAAA,QAAQ,EAAEW,UADV;AACuB,MAAA,QAAQ,EAAEI;AADjC;AAAA;AAAA;AAAA;AAAA,YADC,GAEuD,kBAVzD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA/DQlB,G;;KAAAA,G;AAiET,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  //Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data\n\n  }\n\n// Add Task\nconst addTask = (task) => {\n  //const id = Math.floor(Math.random() * 10000) + 1\n // const newTask = { id, ...task }\n // setTasks([...tasks, newTask])\n \n}\n\n// Delete Task\nconst deleteTask = async (id) => {\n  await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'DELETE',\n  })\n\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n//Toggle Reminder\nconst toggleReminder = (id) => {\n  setTasks(\n    tasks.map((task) =>\n    task.id === id ? { ...task, reminder:\n    !task.reminder } : task )\n  )\n}\n\n  \n  return (\n    <div className=\"container\">\n     <Header  \n     onAdd={() => setShowAddTask (!showAddTask)}\n     showAdd={showAddTask}\n     />\n     {showAddTask && <AddTask onAdd={addTask} \n     showAdd={showAddTask}\n     />}\n     {tasks.length > 0 ? (\n     <Tasks tasks={tasks} \n     onDelete={deleteTask}  onToggle={toggleReminder}/>) : ( 'No Tasks To Show')}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}