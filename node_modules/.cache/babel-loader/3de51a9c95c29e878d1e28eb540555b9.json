{"ast":null,"code":"var _jsxFileName = \"/Users/jenniferlang/react-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]); // Add Task\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; // Delete Task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Toggle Reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 6\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask,\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 22\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }, this) : 'No Tasks To Show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"s8LzkA5aeSm1dim22ZlWGmFnnlE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jenniferlang/react-task-tracker/src/App.js"],"names":["useState","Header","Tasks","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","addTask","task","id","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map","reminder","length"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAChC,EADgC,CAAlC,CAFa,CAMf;;AACA,QAAMS,OAAO,GAAIC,IAAD,IAAU;AACxB,UAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA/C;AACA,UAAMC,OAAO,GAAG;AAAEJ,MAAAA,EAAF;AAAM,SAAGD;AAAT,KAAhB;AACAF,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWQ,OAAX,CAAD,CAAR;AACD,GAJD,CAPe,CAaf;;;AACA,QAAMC,UAAU,GAAIL,EAAD,IAAQ;AACzBH,IAAAA,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAcP,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CAde,CAkBf;;;AACA,QAAMO,cAAc,GAAIP,EAAD,IAAQ;AAC7BH,IAAAA,QAAQ,CACND,KAAK,CAACY,GAAN,CAAWT,IAAD,IACVA,IAAI,CAACC,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGD,IAAL;AAAWU,MAAAA,QAAQ,EACpC,CAACV,IAAI,CAACU;AADW,KAAjB,GACmBV,IAFnB,CADM,CAAR;AAKD,GAND;;AASE,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACC,QAAC,MAAD;AACA,MAAA,KAAK,EAAE,MAAMJ,cAAc,CAAE,CAACD,WAAH,CAD3B;AAEA,MAAA,OAAO,EAAEA;AAFT;AAAA;AAAA;AAAA;AAAA,YADD,EAKEA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEI,OAAhB;AAChB,MAAA,OAAO,EAAEJ;AADO;AAAA;AAAA;AAAA;AAAA,YALjB,EAQEE,KAAK,CAACc,MAAN,GAAe,CAAf,gBACD,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEd,KAAd;AACA,MAAA,QAAQ,EAAES,UADV;AACuB,MAAA,QAAQ,EAAEE;AADjC;AAAA;AAAA;AAAA;AAAA,YADC,GAEuD,kBAVzD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA1CQd,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState(\n    []\n)\n\n// Add Task\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 10000) + 1\n  const newTask = { id, ...task }\n  setTasks([...tasks, newTask])\n}\n\n// Delete Task\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n//Toggle Reminder\nconst toggleReminder = (id) => {\n  setTasks(\n    tasks.map((task) =>\n    task.id === id ? { ...task, reminder:\n    !task.reminder } : task )\n  )\n}\n\n  \n  return (\n    <div className=\"container\">\n     <Header  \n     onAdd={() => setShowAddTask (!showAddTask)}\n     showAdd={showAddTask}\n     />\n     {showAddTask && <AddTask onAdd={addTask} \n     showAdd={showAddTask}\n     />}\n     {tasks.length > 0 ? (\n     <Tasks tasks={tasks} \n     onDelete={deleteTask}  onToggle={toggleReminder}/>) : ( 'No Tasks To Show')}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}