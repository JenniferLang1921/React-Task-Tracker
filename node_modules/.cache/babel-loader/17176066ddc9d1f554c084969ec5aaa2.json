{"ast":null,"code":"var _jsxFileName = \"/Users/jenniferlang/react-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Doctors Appointment',\n    day: 'Feb 5th at 2:30pm',\n    reminder: true\n  }, {\n    id: 2,\n    text: 'Meeting at School',\n    day: 'Feb 6th at 1:30pm',\n    reminder: true\n  }, {\n    id: 3,\n    text: 'Food Shopping',\n    day: 'Feb 5th at 2:30pm',\n    reminder: false\n  }]); // Add Task\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; // Delete Task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Toggle Reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }, this) : 'No Tasks To Show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lVcoZ7QGwTUdelFEi9Knljs+/14=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jenniferlang/react-task-tracker/src/App.js"],"names":["useState","Header","Tasks","AddTask","App","tasks","setTasks","id","text","day","reminder","addTask","task","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map","length"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAChC,CACI;AACAO,IAAAA,EAAE,EAAE,CADJ;AAEAC,IAAAA,IAAI,EAAE,qBAFN;AAGAC,IAAAA,GAAG,EAAE,mBAHL;AAIAC,IAAAA,QAAQ,EAAE;AAJV,GADJ,EAOA;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,mBAFV;AAGIC,IAAAA,GAAG,EAAE,mBAHT;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GAPA,EAaA;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,eAFV;AAGIC,IAAAA,GAAG,EAAE,mBAHT;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GAbA,CADgC,CAAlC,CADa,CAwBf;;AACA,QAAMC,OAAO,GAAIC,IAAD,IAAU;AACxB,UAAML,EAAE,GAAGM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA/C;AACA,UAAMC,OAAO,GAAG;AAAET,MAAAA,EAAF;AAAM,SAAGK;AAAT,KAAhB;AACAN,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWW,OAAX,CAAD,CAAR;AACD,GAJD,CAzBe,CA+Bf;;;AACA,QAAMC,UAAU,GAAIV,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACa,MAAN,CAAcN,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CAhCe,CAoCf;;;AACA,QAAMY,cAAc,GAAIZ,EAAD,IAAQ;AAC7BD,IAAAA,QAAQ,CACND,KAAK,CAACe,GAAN,CAAWR,IAAD,IACVA,IAAI,CAACL,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGK,IAAL;AAAWF,MAAAA,QAAQ,EACpC,CAACE,IAAI,CAACF;AADW,KAAjB,GACmBE,IAFnB,CADM,CAAR;AAKD,GAND;;AASE,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,OAAD;AAAS,MAAA,KAAK,EAAED;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFD,EAGEN,KAAK,CAACgB,MAAN,GAAe,CAAf,gBACD,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEhB,KAAd;AACA,MAAA,QAAQ,EAAEY,UADV;AACuB,MAAA,QAAQ,EAAEE;AADjC;AAAA;AAAA;AAAA;AAAA,YADC,GAEuD,kBALzD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAvDQf,G;;KAAAA,G;AAyDT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n  const [tasks, setTasks] = useState(\n    [\n        {\n        id: 1,\n        text: 'Doctors Appointment',\n        day: 'Feb 5th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'Meeting at School',\n        day: 'Feb 6th at 1:30pm',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Food Shopping',\n        day: 'Feb 5th at 2:30pm',\n        reminder: false,\n    }\n    ]\n)\n\n// Add Task\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 10000) + 1\n  const newTask = { id, ...task }\n  setTasks([...tasks, newTask])\n}\n\n// Delete Task\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n//Toggle Reminder\nconst toggleReminder = (id) => {\n  setTasks(\n    tasks.map((task) =>\n    task.id === id ? { ...task, reminder:\n    !task.reminder } : task )\n  )\n}\n\n  \n  return (\n    <div className=\"container\">\n     <Header />\n     <AddTask onAdd={addTask} />\n     {tasks.length > 0 ? (\n     <Tasks tasks={tasks} \n     onDelete={deleteTask}  onToggle={toggleReminder}/>) : ( 'No Tasks To Show')}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}